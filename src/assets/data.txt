<html>
- 웹 페이지의 구조를 충분히 이해하고 있으며, 시멘틱 태그의 의미를 정확하게 알고 사용할 수 있습니다.
- 디자인 시안을 기반으로 HTML 구조 및 클레스 네임을 꼼꼼하게 설계한 후 퍼블리싱 작업을 진행합니다. 

<css/scss>
- css3의 구조와 속성을 숙지하고 있고, 원하는 스타일로 효율적이고 익숙하게 구현할 수 있습니다.
- SCSS를 활용하여 변수, 중첩 규칙, Mixin 등을 통해 CSS 코드를 보다 효율적으로 작성하고 관리할 수 있습니다.

<jquery>
- css 선택자를 사용하여 dom 요소를 손쉽게 선택하고 조작할 수 있습니다.
- Ajax를 활용하여 비동기 통신을 구현하고 데이터를 동적으로 가져올 수 있습니다.
- 다양한 jQuery 플러그인을 활용할 수 있습니다.

<javascript>
- 비동기 통신을 위한 axios, fetch 함수를 사용할 수 있으며, 차이점에 대해 충분히 이해하고 있습니다.
- javascript의 데이터 타입에 대해 명확히 알고있습니다.
- 이벤트 처리 및 DOM 조작을 익숙하게 수행할 수 있습니다.

<react>
- styled-components를 사용하여 css를 컴포넌트화 할 수 있습니다.
- json-server와 axios를 활용하여 CRUD를 구현할 수 있습니다.
- 리덕스를 연결하여 상태관리를 할 수 있습니다.

<next.js>
- next.js의 라우팅 방법을 이해하고 있으며, 활용할 수 있습니다.
- 파일명에 대괄호를 넣는 방식으로 동일한 구조에 대한 서브페이지 구현이 가능합니다.
- axios와 리덕스를 활용하여 상태관리를 할 수 있습니다.

<redux>
- redux 사용 이유에 대해 충분히 이해하고 있습니다.
- fulfilled, rejected, pending의 차이점에 대해 숙지하고 있으며 각각의 상태에 따라 관리할 수 있습니다.
- 데이터 조회를 위한 액션함수를 디스패치 할 수 있습니다.

